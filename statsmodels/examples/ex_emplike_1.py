"""
This is a basic tutorial on how to conduct basic empirical likelihood
inference for descriptive statistics.  If matplotlib is installed
it also generates plots.

"""
import numpy as np
import statsmodels.api as sm
print('Welcome to El')
np.random.seed(634)
univariate = np.random.standard_normal(30)
eldescriptive = sm.emplike.DescStat(univariate)
eldescriptive_mean = eldescriptive.endog.mean()
print('Hypothesis test results for the mean:')
print(eldescriptive.test_mean(0))
eldescriptive_var = eldescriptive.endog.var()
print('Hypothesis test results for the variance:')
print(eldescriptive.test_var(1))
print('Hypothesis test results for Skewness:')
print(eldescriptive.test_skew(0))
print('Hypothesis test results for the Kurtosis:')
print(eldescriptive.test_kurt(0))
print(' Joint Skewness-Kurtosis test')
eldescriptive.test_joint_skew_kurt(0, 0)
print('Confidence interval for the mean')
print(eldescriptive.ci_mean())
print('Confidence interval for the variance')
print(eldescriptive.ci_var())
print('Confidence interval for skewness')
print(eldescriptive.ci_skew())
print('Confidence interval for kurtosis')
print(eldescriptive.ci_kurt())
mean_variance_contour = eldescriptive.plot_contour(-0.5, 1.2, 0.2, 2.5, 0.05, 0.05)
x1 = np.random.exponential(2, (30, 1))
x2 = 2 * x1 + np.random.chisquare(4, (30, 1))
mv_data = np.concatenate((x1, x2), axis=1)
mv_elmodel = sm.emplike.DescStat(mv_data)
print('Multivaraite mean hypothesis test')
print(mv_elmodel.mv_test_mean(np.array([2, 7])))
print('Correlation Coefficient CI')
print(mv_elmodel.ci_corr())
print('Hypothesis test for correlation')
print(mv_elmodel.test_corr(0.7))
means_contour = mv_elmodel.mv_mean_contour(1, 3, 6, 9, 0.15, 0.15, plot_dta=1)
means_contour2 = mv_elmodel.mv_mean_contour(1, 3, 6, 9, 0.05, 0.05, plot_dta=0)